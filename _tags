<src/*.ml{,i}>               : pa_ounit_lib(core_kernel)
<check_caml_modify/*.ml{,i}> : pa_ounit_lib(core_kernel.check_caml_modify)
<**/*.ml{,i}>                : syntax_camlp4o
"src/time_ns.ml"             : mlh, package(camlp4.macro)
"src/bigstring.ml"           : mlh, package(camlp4.macro)
"src/bigstring_marshal.ml"   : mlh, package(camlp4.macro)
"src/binary_packing.ml"      : mlh, package(camlp4.macro)
"src/core_int63.ml"          : mlh, package(camlp4.macro)
"src/core_int63.mli"         : mlh, package(camlp4.macro)
"src/pool.ml"                : mlh, package(camlp4.macro)
"src/pow_overflow_bounds.ml" : mlh, package(camlp4.macro)
<check_caml_modify/*>        : caml_modify_wrapper
# OASIS_START
# DO NOT EDIT (digest: 395b2cb282b912f3c98590036e56d967)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library core_kernel
"src/core_kernel.cmxs": use_core_kernel
"src/array_permute.cmx": for-pack(Core_kernel)
"src/avltree.cmx": for-pack(Core_kernel)
"src/backtrace.cmx": for-pack(Core_kernel)
"src/bag.cmx": for-pack(Core_kernel)
"src/bigbuffer_internal.cmx": for-pack(Core_kernel)
"src/bigbuffer.cmx": for-pack(Core_kernel)
"src/bigstring_marshal.cmx": for-pack(Core_kernel)
"src/bigstring.cmx": for-pack(Core_kernel)
"src/bigsubstring.cmx": for-pack(Core_kernel)
"src/binable0.cmx": for-pack(Core_kernel)
"src/binable.cmx": for-pack(Core_kernel)
"src/binary_packing.cmx": for-pack(Core_kernel)
"src/binary_searchable.cmx": for-pack(Core_kernel)
"src/binary_searchable_intf.cmx": for-pack(Core_kernel)
"src/blang.cmx": for-pack(Core_kernel)
"src/blit.cmx": for-pack(Core_kernel)
"src/blit_intf.cmx": for-pack(Core_kernel)
"src/bool.cmx": for-pack(Core_kernel)
"src/bounded_int_table.cmx": for-pack(Core_kernel)
"src/bucket.cmx": for-pack(Core_kernel)
"src/byte_units.cmx": for-pack(Core_kernel)
"src/caml.cmx": for-pack(Core_kernel)
"src/common.cmx": for-pack(Core_kernel)
"src/commutative_group.cmx": for-pack(Core_kernel)
"src/comparable_intf.cmx": for-pack(Core_kernel)
"src/comparable.cmx": for-pack(Core_kernel)
"src/comparator.cmx": for-pack(Core_kernel)
"src/constrained_float.cmx": for-pack(Core_kernel)
"src/container.cmx": for-pack(Core_kernel)
"src/container_unit_tests.cmx": for-pack(Core_kernel)
"src/core_arg.cmx": for-pack(Core_kernel)
"src/core_array.cmx": for-pack(Core_kernel)
"src/core_bin_prot.cmx": for-pack(Core_kernel)
"src/core_char.cmx": for-pack(Core_kernel)
"src/core_field.cmx": for-pack(Core_kernel)
"src/core_gc.cmx": for-pack(Core_kernel)
"src/core_hashtbl_intf.cmx": for-pack(Core_kernel)
"src/core_hashtbl.cmx": for-pack(Core_kernel)
"src/core_int32.cmx": for-pack(Core_kernel)
"src/core_int63.cmx": for-pack(Core_kernel)
"src/core_int64.cmx": for-pack(Core_kernel)
"src/core_int.cmx": for-pack(Core_kernel)
"src/core_lazy.cmx": for-pack(Core_kernel)
"src/core_list.cmx": for-pack(Core_kernel)
"src/core_map_intf.cmx": for-pack(Core_kernel)
"src/core_map.cmx": for-pack(Core_kernel)
"src/core_map_unit_tests.cmx": for-pack(Core_kernel)
"src/core_nativeint.cmx": for-pack(Core_kernel)
"src/core_printexc.cmx": for-pack(Core_kernel)
"src/core_printf.cmx": for-pack(Core_kernel)
"src/core_queue.cmx": for-pack(Core_kernel)
"src/core_queue_debug.cmx": for-pack(Core_kernel)
"src/core_queue_unit_tests.cmx": for-pack(Core_kernel)
"src/core_random.cmx": for-pack(Core_kernel)
"src/core_set_intf.cmx": for-pack(Core_kernel)
"src/core_set.cmx": for-pack(Core_kernel)
"src/core_set_unit_tests.cmx": for-pack(Core_kernel)
"src/core_sexp.cmx": for-pack(Core_kernel)
"src/core_stack.cmx": for-pack(Core_kernel)
"src/core_string.cmx": for-pack(Core_kernel)
"src/core_weak.cmx": for-pack(Core_kernel)
"src/day_of_week.cmx": for-pack(Core_kernel)
"src/debug.cmx": for-pack(Core_kernel)
"src/decimal.cmx": for-pack(Core_kernel)
"src/deque.cmx": for-pack(Core_kernel)
"src/dequeue.cmx": for-pack(Core_kernel)
"src/doubly_linked.cmx": for-pack(Core_kernel)
"src/equal.cmx": for-pack(Core_kernel)
"src/error.cmx": for-pack(Core_kernel)
"src/exn.cmx": for-pack(Core_kernel)
"src/fdeque.cmx": for-pack(Core_kernel)
"src/fheap.cmx": for-pack(Core_kernel)
"src/flags_intf.cmx": for-pack(Core_kernel)
"src/flags.cmx": for-pack(Core_kernel)
"src/flat_array.cmx": for-pack(Core_kernel)
"src/flat_array_debug.cmx": for-pack(Core_kernel)
"src/flat_array_unit_tests.cmx": for-pack(Core_kernel)
"src/flat_queue.cmx": for-pack(Core_kernel)
"src/flat_queue_debug.cmx": for-pack(Core_kernel)
"src/flat_queue_unit_tests.cmx": for-pack(Core_kernel)
"src/floatable.cmx": for-pack(Core_kernel)
"src/float_intf.cmx": for-pack(Core_kernel)
"src/float.cmx": for-pack(Core_kernel)
"src/float_robust_compare.cmx": for-pack(Core_kernel)
"src/fn.cmx": for-pack(Core_kernel)
"src/force_once.cmx": for-pack(Core_kernel)
"src/fqueue.cmx": for-pack(Core_kernel)
"src/hashable.cmx": for-pack(Core_kernel)
"src/hash_heap.cmx": for-pack(Core_kernel)
"src/hash_queue.cmx": for-pack(Core_kernel)
"src/hash_set_intf.cmx": for-pack(Core_kernel)
"src/hash_set.cmx": for-pack(Core_kernel)
"src/hashtbl_unit_tests.cmx": for-pack(Core_kernel)
"src/heap_block.cmx": for-pack(Core_kernel)
"src/heap_intf.cmx": for-pack(Core_kernel)
"src/heap.cmx": for-pack(Core_kernel)
"src/hex_lexer.cmx": for-pack(Core_kernel)
"src/host_and_port.cmx": for-pack(Core_kernel)
"src/identifiable.cmx": for-pack(Core_kernel)
"src/in_channel.cmx": for-pack(Core_kernel)
"src/info.cmx": for-pack(Core_kernel)
"src/intable.cmx": for-pack(Core_kernel)
"src/int_conversions.cmx": for-pack(Core_kernel)
"src/interfaces.cmx": for-pack(Core_kernel)
"src/interned_string.cmx": for-pack(Core_kernel)
"src/int_intf.cmx": for-pack(Core_kernel)
"src/int_math.cmx": for-pack(Core_kernel)
"src/int_pow2.cmx": for-pack(Core_kernel)
"src/int_replace_polymorphic_compare.cmx": for-pack(Core_kernel)
"src/int_set.cmx": for-pack(Core_kernel)
"src/invariant.cmx": for-pack(Core_kernel)
"src/invariant_intf.cmx": for-pack(Core_kernel)
"src/linked_queue.cmx": for-pack(Core_kernel)
"src/linked_stack.cmx": for-pack(Core_kernel)
"src/make_substring.cmx": for-pack(Core_kernel)
"src/memo.cmx": for-pack(Core_kernel)
"src/monad.cmx": for-pack(Core_kernel)
"src/month.cmx": for-pack(Core_kernel)
"src/never_returns.cmx": for-pack(Core_kernel)
"src/no_polymorphic_compare.cmx": for-pack(Core_kernel)
"src/nothing0.cmx": for-pack(Core_kernel)
"src/nothing.cmx": for-pack(Core_kernel)
"src/obj_array.cmx": for-pack(Core_kernel)
"src/only_in_test.cmx": for-pack(Core_kernel)
"src/option.cmx": for-pack(Core_kernel)
"src/ordered_collection_common.cmx": for-pack(Core_kernel)
"src/ordering.cmx": for-pack(Core_kernel)
"src/or_error.cmx": for-pack(Core_kernel)
"src/out_channel.cmx": for-pack(Core_kernel)
"src/percent.cmx": for-pack(Core_kernel)
"src/perms.cmx": for-pack(Core_kernel)
"src/pid.cmx": for-pack(Core_kernel)
"src/poly.cmx": for-pack(Core_kernel)
"src/polymorphic_compare_intf.cmx": for-pack(Core_kernel)
"src/polymorphic_compare.cmx": for-pack(Core_kernel)
"src/pool.cmx": for-pack(Core_kernel)
"src/pool_intf.cmx": for-pack(Core_kernel)
"src/pool_unit_tests.cmx": for-pack(Core_kernel)
"src/pooled_hashtbl.cmx": for-pack(Core_kernel)
"src/pooled_hashtbl_unit_test.cmx": for-pack(Core_kernel)
"src/pow_overflow_bounds.cmx": for-pack(Core_kernel)
"src/pretty_printer.cmx": for-pack(Core_kernel)
"src/ref.cmx": for-pack(Core_kernel)
"src/result.cmx": for-pack(Core_kernel)
"src/robustly_comparable.cmx": for-pack(Core_kernel)
"src/sequence.cmx": for-pack(Core_kernel)
"src/set_once.cmx": for-pack(Core_kernel)
"src/sexpable.cmx": for-pack(Core_kernel)
"src/source_code_position0.cmx": for-pack(Core_kernel)
"src/source_code_position.cmx": for-pack(Core_kernel)
"src/stable_containers.cmx": for-pack(Core_kernel)
"src/stable_internal.cmx": for-pack(Core_kernel)
"src/stable_module_types.cmx": for-pack(Core_kernel)
"src/stable.cmx": for-pack(Core_kernel)
"src/stable_unit_test_intf.cmx": for-pack(Core_kernel)
"src/stable_unit_test.cmx": for-pack(Core_kernel)
"src/stack_intf.cmx": for-pack(Core_kernel)
"src/stack_unit_tests.cmx": for-pack(Core_kernel)
"src/staged.cmx": for-pack(Core_kernel)
"src/std_common.cmx": for-pack(Core_kernel)
"src/std_internal.cmx": for-pack(Core_kernel)
"src/std_kernel.cmx": for-pack(Core_kernel)
"src/std.cmx": for-pack(Core_kernel)
"src/stringable.cmx": for-pack(Core_kernel)
"src/string_id.cmx": for-pack(Core_kernel)
"src/substring_intf.cmx": for-pack(Core_kernel)
"src/substring.cmx": for-pack(Core_kernel)
"src/t.cmx": for-pack(Core_kernel)
"src/thread_safe_queue.cmx": for-pack(Core_kernel)
"src/time_ns.cmx": for-pack(Core_kernel)
"src/time_ns_alternate_sexp.cmx": for-pack(Core_kernel)
"src/timing_wheel_intf.cmx": for-pack(Core_kernel)
"src/timing_wheel_ns.cmx": for-pack(Core_kernel)
"src/timing_wheel_ns_unit_tests.cmx": for-pack(Core_kernel)
"src/timing_wheel_unit_tests.cmx": for-pack(Core_kernel)
"src/tuple.cmx": for-pack(Core_kernel)
"src/tuple_type.cmx": for-pack(Core_kernel)
"src/tuple_type_intf.cmx": for-pack(Core_kernel)
"src/type_equal.cmx": for-pack(Core_kernel)
"src/type_immediacy.cmx": for-pack(Core_kernel)
"src/type_immediacy_conv_unit_tests.cmx": for-pack(Core_kernel)
"src/type_immediacy_witness_unit_tests.cmx": for-pack(Core_kernel)
"src/union_find.cmx": for-pack(Core_kernel)
"src/unique_id_intf.cmx": for-pack(Core_kernel)
"src/unique_id.cmx": for-pack(Core_kernel)
"src/unit.cmx": for-pack(Core_kernel)
"src/univ_map.cmx": for-pack(Core_kernel)
"src/univ.cmx": for-pack(Core_kernel)
"src/unpack_buffer.cmx": for-pack(Core_kernel)
"src/validated_intf.cmx": for-pack(Core_kernel)
"src/validated.cmx": for-pack(Core_kernel)
"src/validate.cmx": for-pack(Core_kernel)
"src/with_return.cmx": for-pack(Core_kernel)
"src/word_size.cmx": for-pack(Core_kernel)
<src/core_kernel.{cma,cmxa}>: use_libcore_kernel_stubs
<src/*.ml{,i,y}>: package(bigarray)
<src/*.ml{,i,y}>: package(bin_prot)
<src/*.ml{,i,y}>: package(bin_prot.syntax)
<src/*.ml{,i,y}>: package(comparelib.syntax)
<src/*.ml{,i,y}>: package(custom_printf)
<src/*.ml{,i,y}>: package(custom_printf.syntax)
<src/*.ml{,i,y}>: package(enumerate)
<src/*.ml{,i,y}>: package(enumerate.syntax)
<src/*.ml{,i,y}>: package(fieldslib)
<src/*.ml{,i,y}>: package(fieldslib.syntax)
<src/*.ml{,i,y}>: package(herelib)
<src/*.ml{,i,y}>: package(herelib.syntax)
<src/*.ml{,i,y}>: package(pa_bench)
<src/*.ml{,i,y}>: package(pa_bench.syntax)
<src/*.ml{,i,y}>: package(pa_ounit)
<src/*.ml{,i,y}>: package(pa_ounit.syntax)
<src/*.ml{,i,y}>: package(pa_pipebang)
<src/*.ml{,i,y}>: package(pa_test)
<src/*.ml{,i,y}>: package(pa_test.syntax)
<src/*.ml{,i,y}>: package(sexplib)
<src/*.ml{,i,y}>: package(sexplib.syntax)
<src/*.ml{,i,y}>: package(typerep_lib)
<src/*.ml{,i,y}>: package(typerep_lib.syntax)
<src/*.ml{,i,y}>: package(unix)
<src/*.ml{,i,y}>: package(variantslib)
<src/*.ml{,i,y}>: package(variantslib.syntax)
"src/bigstring_marshal_stubs.c": package(bigarray)
"src/bigstring_marshal_stubs.c": package(bin_prot)
"src/bigstring_marshal_stubs.c": package(bin_prot.syntax)
"src/bigstring_marshal_stubs.c": package(comparelib.syntax)
"src/bigstring_marshal_stubs.c": package(custom_printf)
"src/bigstring_marshal_stubs.c": package(custom_printf.syntax)
"src/bigstring_marshal_stubs.c": package(enumerate)
"src/bigstring_marshal_stubs.c": package(enumerate.syntax)
"src/bigstring_marshal_stubs.c": package(fieldslib)
"src/bigstring_marshal_stubs.c": package(fieldslib.syntax)
"src/bigstring_marshal_stubs.c": package(herelib)
"src/bigstring_marshal_stubs.c": package(herelib.syntax)
"src/bigstring_marshal_stubs.c": package(pa_bench)
"src/bigstring_marshal_stubs.c": package(pa_bench.syntax)
"src/bigstring_marshal_stubs.c": package(pa_ounit)
"src/bigstring_marshal_stubs.c": package(pa_ounit.syntax)
"src/bigstring_marshal_stubs.c": package(pa_pipebang)
"src/bigstring_marshal_stubs.c": package(pa_test)
"src/bigstring_marshal_stubs.c": package(pa_test.syntax)
"src/bigstring_marshal_stubs.c": package(sexplib)
"src/bigstring_marshal_stubs.c": package(sexplib.syntax)
"src/bigstring_marshal_stubs.c": package(typerep_lib)
"src/bigstring_marshal_stubs.c": package(typerep_lib.syntax)
"src/bigstring_marshal_stubs.c": package(unix)
"src/bigstring_marshal_stubs.c": package(variantslib)
"src/bigstring_marshal_stubs.c": package(variantslib.syntax)
"src/bigstring_stubs.c": package(bigarray)
"src/bigstring_stubs.c": package(bin_prot)
"src/bigstring_stubs.c": package(bin_prot.syntax)
"src/bigstring_stubs.c": package(comparelib.syntax)
"src/bigstring_stubs.c": package(custom_printf)
"src/bigstring_stubs.c": package(custom_printf.syntax)
"src/bigstring_stubs.c": package(enumerate)
"src/bigstring_stubs.c": package(enumerate.syntax)
"src/bigstring_stubs.c": package(fieldslib)
"src/bigstring_stubs.c": package(fieldslib.syntax)
"src/bigstring_stubs.c": package(herelib)
"src/bigstring_stubs.c": package(herelib.syntax)
"src/bigstring_stubs.c": package(pa_bench)
"src/bigstring_stubs.c": package(pa_bench.syntax)
"src/bigstring_stubs.c": package(pa_ounit)
"src/bigstring_stubs.c": package(pa_ounit.syntax)
"src/bigstring_stubs.c": package(pa_pipebang)
"src/bigstring_stubs.c": package(pa_test)
"src/bigstring_stubs.c": package(pa_test.syntax)
"src/bigstring_stubs.c": package(sexplib)
"src/bigstring_stubs.c": package(sexplib.syntax)
"src/bigstring_stubs.c": package(typerep_lib)
"src/bigstring_stubs.c": package(typerep_lib.syntax)
"src/bigstring_stubs.c": package(unix)
"src/bigstring_stubs.c": package(variantslib)
"src/bigstring_stubs.c": package(variantslib.syntax)
"src/core_array_stubs.c": package(bigarray)
"src/core_array_stubs.c": package(bin_prot)
"src/core_array_stubs.c": package(bin_prot.syntax)
"src/core_array_stubs.c": package(comparelib.syntax)
"src/core_array_stubs.c": package(custom_printf)
"src/core_array_stubs.c": package(custom_printf.syntax)
"src/core_array_stubs.c": package(enumerate)
"src/core_array_stubs.c": package(enumerate.syntax)
"src/core_array_stubs.c": package(fieldslib)
"src/core_array_stubs.c": package(fieldslib.syntax)
"src/core_array_stubs.c": package(herelib)
"src/core_array_stubs.c": package(herelib.syntax)
"src/core_array_stubs.c": package(pa_bench)
"src/core_array_stubs.c": package(pa_bench.syntax)
"src/core_array_stubs.c": package(pa_ounit)
"src/core_array_stubs.c": package(pa_ounit.syntax)
"src/core_array_stubs.c": package(pa_pipebang)
"src/core_array_stubs.c": package(pa_test)
"src/core_array_stubs.c": package(pa_test.syntax)
"src/core_array_stubs.c": package(sexplib)
"src/core_array_stubs.c": package(sexplib.syntax)
"src/core_array_stubs.c": package(typerep_lib)
"src/core_array_stubs.c": package(typerep_lib.syntax)
"src/core_array_stubs.c": package(unix)
"src/core_array_stubs.c": package(variantslib)
"src/core_array_stubs.c": package(variantslib.syntax)
"src/core_gc_stubs.c": package(bigarray)
"src/core_gc_stubs.c": package(bin_prot)
"src/core_gc_stubs.c": package(bin_prot.syntax)
"src/core_gc_stubs.c": package(comparelib.syntax)
"src/core_gc_stubs.c": package(custom_printf)
"src/core_gc_stubs.c": package(custom_printf.syntax)
"src/core_gc_stubs.c": package(enumerate)
"src/core_gc_stubs.c": package(enumerate.syntax)
"src/core_gc_stubs.c": package(fieldslib)
"src/core_gc_stubs.c": package(fieldslib.syntax)
"src/core_gc_stubs.c": package(herelib)
"src/core_gc_stubs.c": package(herelib.syntax)
"src/core_gc_stubs.c": package(pa_bench)
"src/core_gc_stubs.c": package(pa_bench.syntax)
"src/core_gc_stubs.c": package(pa_ounit)
"src/core_gc_stubs.c": package(pa_ounit.syntax)
"src/core_gc_stubs.c": package(pa_pipebang)
"src/core_gc_stubs.c": package(pa_test)
"src/core_gc_stubs.c": package(pa_test.syntax)
"src/core_gc_stubs.c": package(sexplib)
"src/core_gc_stubs.c": package(sexplib.syntax)
"src/core_gc_stubs.c": package(typerep_lib)
"src/core_gc_stubs.c": package(typerep_lib.syntax)
"src/core_gc_stubs.c": package(unix)
"src/core_gc_stubs.c": package(variantslib)
"src/core_gc_stubs.c": package(variantslib.syntax)
"src/hash_stubs.c": package(bigarray)
"src/hash_stubs.c": package(bin_prot)
"src/hash_stubs.c": package(bin_prot.syntax)
"src/hash_stubs.c": package(comparelib.syntax)
"src/hash_stubs.c": package(custom_printf)
"src/hash_stubs.c": package(custom_printf.syntax)
"src/hash_stubs.c": package(enumerate)
"src/hash_stubs.c": package(enumerate.syntax)
"src/hash_stubs.c": package(fieldslib)
"src/hash_stubs.c": package(fieldslib.syntax)
"src/hash_stubs.c": package(herelib)
"src/hash_stubs.c": package(herelib.syntax)
"src/hash_stubs.c": package(pa_bench)
"src/hash_stubs.c": package(pa_bench.syntax)
"src/hash_stubs.c": package(pa_ounit)
"src/hash_stubs.c": package(pa_ounit.syntax)
"src/hash_stubs.c": package(pa_pipebang)
"src/hash_stubs.c": package(pa_test)
"src/hash_stubs.c": package(pa_test.syntax)
"src/hash_stubs.c": package(sexplib)
"src/hash_stubs.c": package(sexplib.syntax)
"src/hash_stubs.c": package(typerep_lib)
"src/hash_stubs.c": package(typerep_lib.syntax)
"src/hash_stubs.c": package(unix)
"src/hash_stubs.c": package(variantslib)
"src/hash_stubs.c": package(variantslib.syntax)
"src/heap_block_stubs.c": package(bigarray)
"src/heap_block_stubs.c": package(bin_prot)
"src/heap_block_stubs.c": package(bin_prot.syntax)
"src/heap_block_stubs.c": package(comparelib.syntax)
"src/heap_block_stubs.c": package(custom_printf)
"src/heap_block_stubs.c": package(custom_printf.syntax)
"src/heap_block_stubs.c": package(enumerate)
"src/heap_block_stubs.c": package(enumerate.syntax)
"src/heap_block_stubs.c": package(fieldslib)
"src/heap_block_stubs.c": package(fieldslib.syntax)
"src/heap_block_stubs.c": package(herelib)
"src/heap_block_stubs.c": package(herelib.syntax)
"src/heap_block_stubs.c": package(pa_bench)
"src/heap_block_stubs.c": package(pa_bench.syntax)
"src/heap_block_stubs.c": package(pa_ounit)
"src/heap_block_stubs.c": package(pa_ounit.syntax)
"src/heap_block_stubs.c": package(pa_pipebang)
"src/heap_block_stubs.c": package(pa_test)
"src/heap_block_stubs.c": package(pa_test.syntax)
"src/heap_block_stubs.c": package(sexplib)
"src/heap_block_stubs.c": package(sexplib.syntax)
"src/heap_block_stubs.c": package(typerep_lib)
"src/heap_block_stubs.c": package(typerep_lib.syntax)
"src/heap_block_stubs.c": package(unix)
"src/heap_block_stubs.c": package(variantslib)
"src/heap_block_stubs.c": package(variantslib.syntax)
"src/exn_stubs.c": package(bigarray)
"src/exn_stubs.c": package(bin_prot)
"src/exn_stubs.c": package(bin_prot.syntax)
"src/exn_stubs.c": package(comparelib.syntax)
"src/exn_stubs.c": package(custom_printf)
"src/exn_stubs.c": package(custom_printf.syntax)
"src/exn_stubs.c": package(enumerate)
"src/exn_stubs.c": package(enumerate.syntax)
"src/exn_stubs.c": package(fieldslib)
"src/exn_stubs.c": package(fieldslib.syntax)
"src/exn_stubs.c": package(herelib)
"src/exn_stubs.c": package(herelib.syntax)
"src/exn_stubs.c": package(pa_bench)
"src/exn_stubs.c": package(pa_bench.syntax)
"src/exn_stubs.c": package(pa_ounit)
"src/exn_stubs.c": package(pa_ounit.syntax)
"src/exn_stubs.c": package(pa_pipebang)
"src/exn_stubs.c": package(pa_test)
"src/exn_stubs.c": package(pa_test.syntax)
"src/exn_stubs.c": package(sexplib)
"src/exn_stubs.c": package(sexplib.syntax)
"src/exn_stubs.c": package(typerep_lib)
"src/exn_stubs.c": package(typerep_lib.syntax)
"src/exn_stubs.c": package(unix)
"src/exn_stubs.c": package(variantslib)
"src/exn_stubs.c": package(variantslib.syntax)
"src/int_math_stubs.c": package(bigarray)
"src/int_math_stubs.c": package(bin_prot)
"src/int_math_stubs.c": package(bin_prot.syntax)
"src/int_math_stubs.c": package(comparelib.syntax)
"src/int_math_stubs.c": package(custom_printf)
"src/int_math_stubs.c": package(custom_printf.syntax)
"src/int_math_stubs.c": package(enumerate)
"src/int_math_stubs.c": package(enumerate.syntax)
"src/int_math_stubs.c": package(fieldslib)
"src/int_math_stubs.c": package(fieldslib.syntax)
"src/int_math_stubs.c": package(herelib)
"src/int_math_stubs.c": package(herelib.syntax)
"src/int_math_stubs.c": package(pa_bench)
"src/int_math_stubs.c": package(pa_bench.syntax)
"src/int_math_stubs.c": package(pa_ounit)
"src/int_math_stubs.c": package(pa_ounit.syntax)
"src/int_math_stubs.c": package(pa_pipebang)
"src/int_math_stubs.c": package(pa_test)
"src/int_math_stubs.c": package(pa_test.syntax)
"src/int_math_stubs.c": package(sexplib)
"src/int_math_stubs.c": package(sexplib.syntax)
"src/int_math_stubs.c": package(typerep_lib)
"src/int_math_stubs.c": package(typerep_lib.syntax)
"src/int_math_stubs.c": package(unix)
"src/int_math_stubs.c": package(variantslib)
"src/int_math_stubs.c": package(variantslib.syntax)
"src/time_ns_stubs.c": package(bigarray)
"src/time_ns_stubs.c": package(bin_prot)
"src/time_ns_stubs.c": package(bin_prot.syntax)
"src/time_ns_stubs.c": package(comparelib.syntax)
"src/time_ns_stubs.c": package(custom_printf)
"src/time_ns_stubs.c": package(custom_printf.syntax)
"src/time_ns_stubs.c": package(enumerate)
"src/time_ns_stubs.c": package(enumerate.syntax)
"src/time_ns_stubs.c": package(fieldslib)
"src/time_ns_stubs.c": package(fieldslib.syntax)
"src/time_ns_stubs.c": package(herelib)
"src/time_ns_stubs.c": package(herelib.syntax)
"src/time_ns_stubs.c": package(pa_bench)
"src/time_ns_stubs.c": package(pa_bench.syntax)
"src/time_ns_stubs.c": package(pa_ounit)
"src/time_ns_stubs.c": package(pa_ounit.syntax)
"src/time_ns_stubs.c": package(pa_pipebang)
"src/time_ns_stubs.c": package(pa_test)
"src/time_ns_stubs.c": package(pa_test.syntax)
"src/time_ns_stubs.c": package(sexplib)
"src/time_ns_stubs.c": package(sexplib.syntax)
"src/time_ns_stubs.c": package(typerep_lib)
"src/time_ns_stubs.c": package(typerep_lib.syntax)
"src/time_ns_stubs.c": package(unix)
"src/time_ns_stubs.c": package(variantslib)
"src/time_ns_stubs.c": package(variantslib.syntax)
"src/timespec.c": package(bigarray)
"src/timespec.c": package(bin_prot)
"src/timespec.c": package(bin_prot.syntax)
"src/timespec.c": package(comparelib.syntax)
"src/timespec.c": package(custom_printf)
"src/timespec.c": package(custom_printf.syntax)
"src/timespec.c": package(enumerate)
"src/timespec.c": package(enumerate.syntax)
"src/timespec.c": package(fieldslib)
"src/timespec.c": package(fieldslib.syntax)
"src/timespec.c": package(herelib)
"src/timespec.c": package(herelib.syntax)
"src/timespec.c": package(pa_bench)
"src/timespec.c": package(pa_bench.syntax)
"src/timespec.c": package(pa_ounit)
"src/timespec.c": package(pa_ounit.syntax)
"src/timespec.c": package(pa_pipebang)
"src/timespec.c": package(pa_test)
"src/timespec.c": package(pa_test.syntax)
"src/timespec.c": package(sexplib)
"src/timespec.c": package(sexplib.syntax)
"src/timespec.c": package(typerep_lib)
"src/timespec.c": package(typerep_lib.syntax)
"src/timespec.c": package(unix)
"src/timespec.c": package(variantslib)
"src/timespec.c": package(variantslib.syntax)
# Library check_caml_modify
"check_caml_modify/check_caml_modify.cmxs": use_check_caml_modify
"check_caml_modify/caml_modify.cmx": for-pack(Check_caml_modify)
<check_caml_modify/check_caml_modify.{cma,cmxa}>: use_libcheck_caml_modify_stubs
<check_caml_modify/*.ml{,i,y}>: package(pa_ounit)
<check_caml_modify/*.ml{,i,y}>: package(pa_ounit.syntax)
"check_caml_modify/caml_modify_stub.c": package(pa_ounit)
"check_caml_modify/caml_modify_stub.c": package(pa_ounit.syntax)
# Executable pool_caml_modify_check
<test/pool_caml_modify_check.{native,byte}>: package(bigarray)
<test/pool_caml_modify_check.{native,byte}>: package(bin_prot)
<test/pool_caml_modify_check.{native,byte}>: package(bin_prot.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(comparelib.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(custom_printf)
<test/pool_caml_modify_check.{native,byte}>: package(custom_printf.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(enumerate)
<test/pool_caml_modify_check.{native,byte}>: package(enumerate.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(fieldslib)
<test/pool_caml_modify_check.{native,byte}>: package(fieldslib.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(herelib)
<test/pool_caml_modify_check.{native,byte}>: package(herelib.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(pa_bench)
<test/pool_caml_modify_check.{native,byte}>: package(pa_bench.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(pa_ounit)
<test/pool_caml_modify_check.{native,byte}>: package(pa_ounit.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(pa_pipebang)
<test/pool_caml_modify_check.{native,byte}>: package(pa_test)
<test/pool_caml_modify_check.{native,byte}>: package(pa_test.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(sexplib)
<test/pool_caml_modify_check.{native,byte}>: package(sexplib.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(typerep_lib)
<test/pool_caml_modify_check.{native,byte}>: package(typerep_lib.syntax)
<test/pool_caml_modify_check.{native,byte}>: package(unix)
<test/pool_caml_modify_check.{native,byte}>: package(variantslib)
<test/pool_caml_modify_check.{native,byte}>: package(variantslib.syntax)
<test/pool_caml_modify_check.{native,byte}>: use_check_caml_modify
<test/pool_caml_modify_check.{native,byte}>: use_core_kernel
<test/*.ml{,i,y}>: package(bigarray)
<test/*.ml{,i,y}>: package(bin_prot)
<test/*.ml{,i,y}>: package(bin_prot.syntax)
<test/*.ml{,i,y}>: package(comparelib.syntax)
<test/*.ml{,i,y}>: package(custom_printf)
<test/*.ml{,i,y}>: package(custom_printf.syntax)
<test/*.ml{,i,y}>: package(enumerate)
<test/*.ml{,i,y}>: package(enumerate.syntax)
<test/*.ml{,i,y}>: package(fieldslib)
<test/*.ml{,i,y}>: package(fieldslib.syntax)
<test/*.ml{,i,y}>: package(herelib)
<test/*.ml{,i,y}>: package(herelib.syntax)
<test/*.ml{,i,y}>: package(pa_bench)
<test/*.ml{,i,y}>: package(pa_bench.syntax)
<test/*.ml{,i,y}>: package(pa_ounit)
<test/*.ml{,i,y}>: package(pa_ounit.syntax)
<test/*.ml{,i,y}>: package(pa_pipebang)
<test/*.ml{,i,y}>: package(pa_test)
<test/*.ml{,i,y}>: package(pa_test.syntax)
<test/*.ml{,i,y}>: package(sexplib)
<test/*.ml{,i,y}>: package(sexplib.syntax)
<test/*.ml{,i,y}>: package(typerep_lib)
<test/*.ml{,i,y}>: package(typerep_lib.syntax)
<test/*.ml{,i,y}>: package(unix)
<test/*.ml{,i,y}>: package(variantslib)
<test/*.ml{,i,y}>: package(variantslib.syntax)
<test/*.ml{,i,y}>: use_check_caml_modify
<test/*.ml{,i,y}>: use_core_kernel
# OASIS_STOP
